# ../celer_sight_ai/UiAssets/create_new_category_dialog.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Dialog_for_category_creation(object):
    def setupUi(self, Dialog_for_category_creation):
        Dialog_for_category_creation.setObjectName("Dialog_for_category_creation")
        Dialog_for_category_creation.resize(376, 398)
        Dialog_for_category_creation.setStyleSheet(
            "QDialog{\n" "    background-color:rgb(27,27,27);\n" "}\n" ""
        )
        self.outer_layout = QtWidgets.QGridLayout(Dialog_for_category_creation)
        self.outer_layout.setContentsMargins(34, 12, 34, 12)
        self.outer_layout.setObjectName("outer_layout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.create_category_model_type = QtWidgets.QLabel(
            parent=Dialog_for_category_creation
        )
        self.create_category_model_type.setMaximumSize(QtCore.QSize(16777215, 33))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.create_category_model_type.setFont(font)
        self.create_category_model_type.setStyleSheet(
            "color: rgb(255,255,255);\n" "margin-top:20;\n" "font-size:16px;"
        )
        self.create_category_model_type.setObjectName("create_category_model_type")
        self.gridLayout.addWidget(self.create_category_model_type, 3, 0, 1, 1)
        self.create_category_new_label = QtWidgets.QLabel(
            parent=Dialog_for_category_creation
        )
        self.create_category_new_label.setMaximumSize(QtCore.QSize(16777215, 33))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.create_category_new_label.setFont(font)
        self.create_category_new_label.setStyleSheet(
            "color: rgb(255,255,255);\n" "padding-top: 15px;\n" "font-size:16px;"
        )
        self.create_category_new_label.setObjectName("create_category_new_label")
        self.gridLayout.addWidget(self.create_category_new_label, 0, 0, 1, 1)
        self.create_category_new_plain_text = QtWidgets.QPlainTextEdit(
            parent=Dialog_for_category_creation
        )
        self.create_category_new_plain_text.setMinimumSize(QtCore.QSize(0, 0))
        self.create_category_new_plain_text.setMaximumSize(QtCore.QSize(300, 25))
        self.create_category_new_plain_text.setFocusPolicy(
            QtCore.Qt.FocusPolicy.ClickFocus
        )
        self.create_category_new_plain_text.setStyleSheet(
            "border-radius: 8px;\n"
            "background-color: rgb(45,45,45);\n"
            "color: rgb(255,255,255);\n"
            "padding-left: 5px;\n"
            "padding-top: 0px;\n"
            "font-size:13px;"
        )
        self.create_category_new_plain_text.setTabChangesFocus(True)
        self.create_category_new_plain_text.setPlainText("")
        self.create_category_new_plain_text.setPlaceholderText("")
        self.create_category_new_plain_text.setObjectName(
            "create_category_new_plain_text"
        )
        self.gridLayout.addWidget(self.create_category_new_plain_text, 2, 0, 1, 1)
        self.create_category_model_type_comboBox = QtWidgets.QComboBox(
            parent=Dialog_for_category_creation
        )
        self.create_category_model_type_comboBox.setMinimumSize(QtCore.QSize(0, 25))
        self.create_category_model_type_comboBox.setMaximumSize(QtCore.QSize(300, 25))
        self.create_category_model_type_comboBox.setStyleSheet(
            "QComboBox{\n"
            "    border-radius: 8px;\n"
            "    background-color: rgb(45,45,45);\n"
            "    color: rgb(255,255,255);\n"
            "}\n"
            "QComboBox:editable{\n"
            "    background-color: rgb(45,45,45);\n"
            "    border: 0px solid;\n"
            "}\n"
            "\n"
            "QComboBox::drop-down {\n"
            "    subcontrol-origin: padding;\n"
            "    subcontrol-position: top right;\n"
            "    width: 300px;\n"
            "    color: rgb(150,150,150);\n"
            "    border-left-width: 1px;\n"
            "    border-left-color: darkgray;\n"
            "    border-left-style: solid; /* just a single line */\n"
            "    border-top-right-radius: 3px; /* same radius as the QComboBox */\n"
            "    border-bottom-right-radius: 3px;\n"
            "}\n"
            "font-size:13px;\n"
            ""
        )
        self.create_category_model_type_comboBox.setObjectName(
            "create_category_model_type_comboBox"
        )
        self.create_category_model_type_comboBox.addItem("")
        self.create_category_model_type_comboBox.addItem("")
        self.gridLayout.addWidget(self.create_category_model_type_comboBox, 5, 0, 1, 1)
        self.create_category_new_label_explanation = QtWidgets.QLabel(
            parent=Dialog_for_category_creation
        )
        self.create_category_new_label_explanation.setStyleSheet(
            "color: rgb(185,185,185);\n" "font-size:13px;"
        )
        self.create_category_new_label_explanation.setWordWrap(True)
        self.create_category_new_label_explanation.setObjectName(
            "create_category_new_label_explanation"
        )
        self.gridLayout.addWidget(
            self.create_category_new_label_explanation, 1, 0, 1, 1
        )
        self.create_category_model_type_explanation = QtWidgets.QLabel(
            parent=Dialog_for_category_creation
        )
        self.create_category_model_type_explanation.setStyleSheet(
            "color: rgb(185,185,185);\n" "font-size:13px;"
        )
        self.create_category_model_type_explanation.setWordWrap(True)
        self.create_category_model_type_explanation.setObjectName(
            "create_category_model_type_explanation"
        )
        self.gridLayout.addWidget(
            self.create_category_model_type_explanation, 4, 0, 1, 1
        )
        self.outer_layout.addLayout(self.gridLayout, 0, 0, 1, 3)
        self.create_category_cancel_button = QtWidgets.QPushButton(
            parent=Dialog_for_category_creation
        )
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.create_category_cancel_button.sizePolicy().hasHeightForWidth()
        )
        self.create_category_cancel_button.setSizePolicy(sizePolicy)
        self.create_category_cancel_button.setMinimumSize(QtCore.QSize(0, 25))
        self.create_category_cancel_button.setMaximumSize(QtCore.QSize(130, 16777215))
        self.create_category_cancel_button.setStyleSheet(
            "QPushButton{\n"
            "     background-color: rgba(0,0,0,0);\n"
            "     color: rgb(105,215,105);\n"
            "     border: 0px solid rgb(165,255,165);\n"
            "     border-radius: 5px;\n"
            "}\n"
            "QPushButton:hover{\n"
            "      background-color: rgba(105,215,105, 30);\n"
            "       color: rgb(155,255,155);\n"
            "}\n"
            ""
        )
        self.create_category_cancel_button.setObjectName(
            "create_category_cancel_button"
        )
        self.outer_layout.addWidget(self.create_category_cancel_button, 1, 2, 1, 1)
        self.create_category_next_button = QtWidgets.QPushButton(
            parent=Dialog_for_category_creation
        )
        self.create_category_next_button.setMinimumSize(QtCore.QSize(0, 25))
        self.create_category_next_button.setMaximumSize(QtCore.QSize(130, 16777215))
        self.create_category_next_button.setStyleSheet(
            "            QPushButton{\n"
            "                    background-color: rgba(0,0,0,0);\n"
            "                    color: rgb(215 ,105,105);\n"
            "                    border: 0px solid rgb(165,255,165);\n"
            "                    border-radius: 5px;\n"
            "                    }\n"
            "            QPushButton:hover{\n"
            "                    background-color: rgba(215,105,105, 30);\n"
            "                    color: rgb(255,155,155);\n"
            "                    }"
        )
        self.create_category_next_button.setObjectName("create_category_next_button")
        self.outer_layout.addWidget(self.create_category_next_button, 1, 1, 1, 1)

        self.retranslateUi(Dialog_for_category_creation)
        QtCore.QMetaObject.connectSlotsByName(Dialog_for_category_creation)

    def retranslateUi(self, Dialog_for_category_creation):
        _translate = QtCore.QCoreApplication.translate
        Dialog_for_category_creation.setWindowTitle(
            _translate("Dialog_for_category_creation", "Dialog")
        )
        self.create_category_model_type.setText(
            _translate("Dialog_for_category_creation", "AI model type :")
        )
        self.create_category_new_label.setText(
            _translate("Dialog_for_category_creation", "New Label Name :")
        )
        self.create_category_model_type_comboBox.setItemText(
            0, _translate("Dialog_for_category_creation", "Performance")
        )
        self.create_category_model_type_comboBox.setItemText(
            1, _translate("Dialog_for_category_creation", "Quality")
        )
        self.create_category_new_label_explanation.setText(
            _translate(
                "Dialog_for_category_creation",
                'Create a new label. The label name should be representative of a region across phenotypes and lens magnifications. For example, "tail" is a good label, where as "dcr_1_tail" is not.',
            )
        )
        self.create_category_model_type_explanation.setText(
            _translate(
                "Dialog_for_category_creation",
                'Create a new label. The label name should be representative of a region across phenotypes and lens magnifications. For example, "tail" is a good label, where as "dcr_1_tail" is not. \n'
                " For performance mode models update faster and masks are generated up to x5 times faster than quality mode",
            )
        )
        self.create_category_cancel_button.setText(
            _translate("Dialog_for_category_creation", "next")
        )
        self.create_category_next_button.setText(
            _translate("Dialog_for_category_creation", "cancel")
        )
